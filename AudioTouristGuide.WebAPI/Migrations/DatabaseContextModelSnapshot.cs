// <auto-generated />
using System;
using AudioTouristGuide.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AudioTouristGuide.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberDesiredTour", b =>
                {
                    b.Property<long>("MemberId");

                    b.Property<long>("TourId");

                    b.HasKey("MemberId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("MemberDesiredTour");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberFavoriteTour", b =>
                {
                    b.Property<long>("MemberId");

                    b.Property<long>("TourId");

                    b.HasKey("MemberId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("MemberFavoriteTour");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberPurchasedTour", b =>
                {
                    b.Property<long>("MemberId");

                    b.Property<long>("TourId");

                    b.HasKey("MemberId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("MemberPurchasedTour");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.TourPlace", b =>
                {
                    b.Property<long>("PlaceId");

                    b.Property<long>("TourId");

                    b.HasKey("PlaceId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("TourPlace");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.MemberModels.Member", b =>
                {
                    b.Property<long>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("AvatarImageUrl");

                    b.Property<DateTime?>("Birthday");

                    b.Property<double>("BonusPoints");

                    b.Property<DateTime>("CereationTimeStamp");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsEmailValidated");

                    b.Property<bool>("IsMobilePhoneNumberValidated");

                    b.Property<string>("LastName");

                    b.Property<string>("MobilePhoneNumber");

                    b.Property<string>("PostCode");

                    b.Property<int>("Sex");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.AudioAsset", b =>
                {
                    b.Property<long>("AudioAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetFileUrl");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<long>("PlaceId");

                    b.HasKey("AudioAssetId");

                    b.HasIndex("PlaceId")
                        .IsUnique();

                    b.ToTable("AudioAssets");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.ImageAsset", b =>
                {
                    b.Property<long>("ImageAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetFileUrl");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<long>("PlaceId");

                    b.Property<TimeSpan>("PointOfDisplayingStart");

                    b.HasKey("ImageAssetId");

                    b.HasIndex("PlaceId");

                    b.ToTable("ImageAssets");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.Place", b =>
                {
                    b.Property<long>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetsFolderGuid");

                    b.Property<long>("DataSize");

                    b.Property<string>("Description");

                    b.Property<string>("DisplayName");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("PlaceId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.Tour", b =>
                {
                    b.Property<long>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetsFolderGuid");

                    b.Property<string>("CountryName");

                    b.Property<long>("DataSize");

                    b.Property<string>("Description");

                    b.Property<TimeSpan>("EstimatedDuration");

                    b.Property<decimal?>("GrossPrice");

                    b.Property<string>("LogoUrl");

                    b.Property<string>("Name");

                    b.HasKey("TourId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberDesiredTour", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.MemberModels.Member", "Member")
                        .WithMany("MemberDesiredTour")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Tour", "Tour")
                        .WithMany("MemberDesiredTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberFavoriteTour", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.MemberModels.Member", "Member")
                        .WithMany("MemberFavoriteTours")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Tour", "Tour")
                        .WithMany("MemberFavoriteTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.MemberPurchasedTour", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.MemberModels.Member", "Member")
                        .WithMany("MemberPurchasedTours")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Tour", "Tour")
                        .WithMany("MemberPurchasedTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.JoinTablesModels.TourPlace", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Place", "Place")
                        .WithMany("TourPlaces")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Tour", "Tour")
                        .WithMany("TourPlaces")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.AudioAsset", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Place", "Place")
                        .WithOne("AudioAsset")
                        .HasForeignKey("AudioTouristGuide.WebAPI.Database.TourModels.AudioAsset", "PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AudioTouristGuide.WebAPI.Database.TourModels.ImageAsset", b =>
                {
                    b.HasOne("AudioTouristGuide.WebAPI.Database.TourModels.Place", "Place")
                        .WithMany("ImageAssets")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
